<%===%>
	<%パイプ その1%>
<%===%>
<$パイプ$>
<+|+>をパイプといいます．
<+command1 | command2+>のように実行すると，
<+command1+>の出力を<+command2+>の入力として扱えます．

<$grep$>
入力のうち，合致する文字列がある行のみを表示します．
パイプを使わずにファイル名を指定して使用することも出来ます．
使用例1 : ファイル<+ex03.txt+>中の文字列<+パイプ+>を含む行を表示

	<+$ cat ex03.txt | grep "パイプ"+>
	  または
	<+$ grep "パイプ" ex03.txt+>

また，<+-v+>をつけて実行すると合致した文字列を除外することが出来ます．
使用例2 : ファイル<+ex03.txt+>中の文字列<+パイプ+>を含み<+ファイル+>を含まない行を表示．

	<+$ cat ex03.txt | grep "パイプ" | grep -v "ファイル"

<+-C1+>をつけて実行すると合致した文字列の上下1行を表示することが出来ます．
使用例3 : ファイル<+ex03.txt+>中の文字列<+パイプ+>を含む行を中心とした上下1行を表示

	<+$ cat ex03.txt | grep -C1 "パイプ"

<$tee$>
入力を指定したファイルに出力し，その内容を画面に表示します．
デフォルトでは毎回ファイルを新規作成して上書きします．

使用例1 : <+ex03.txt+>のうち<+パイプ+>を含む行を抜粋しその内容を表示して<+pipe.txt+>に出力．

	<+$ cat ex03.txt | grep "パイプ" | tee pipe.txt+>

新規作成で上書きするのではなく，追記したい場合は<+-a+>オプションを指定します．
使用例2 : <+ex03.txt+>のうち<+grep+>を含む行を抜粋し，その内容を表示して<+pipe.txt+>に追記．

	<+$ cat ex03.txt | grep "grep" | tee -a pipe.txt+>

<#===#>
	<#実践演習#>
<#===#>
1. <+ps aux+>を実行しその中から自分のユーザ名と合致する行を抜粋してみましょう．
   ヒント1 : <+ps aux+>を実行すると現在実行中のプログラム一覧 (プロセス一覧) を見られます．
   ヒント2 : 自分のユーザ名は<+whoami+>コマンドで確認できます．

2. このファイルから使用例のみを表示し，その内容を<+usage.txt+>に出力してみましょう．
   ヒント : 合致した文字列の下側5行を表示するには<+grep -A5+>を使います．
