[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
	[33m変数[0m
[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
[92m‣ 変数[0m
変数は値や文字列に名前をつけて保持しておく仕組みのことです．
[96m名前=値[0mという形式のコマンドです．
このとき，名前と=，値の間にスペースを入れないように注意してください．
使用例1 : 変数VARに"Hello, World"を代入．

	[96m$ VAR="Hello, World"[0m

変数にアクセスするためには名前の前に[96m$[0mをつけます．
使用例2 : 上で定義したVARを[96mecho[0mで出力．

	[96m$ echo $VAR[0m

変数の一部を他の文字に置き換えるには${VAR/置換前/置換後}とします．
使用例3 : 変数[96mVAR[0mのWorldをLinuxに置き換えて出力する．

	[96m$ echo ${VAR/World/Linux}

[92m‣ 環境変数[0m
シェル起動時に定義されている特殊な変数があります．
使用例1 : 環境変数を一覧表示

	[96m$ env[0m

[96m新しい端末を開いてから[0m次の例を実行してみましょう．
使用例2 : 環境変数PATHを表示し空白で初期化したあとに
          コマンドを実行

	[96m$ echo $PATH[0m
	[96m$ PATH=""[0m
	[96m$ echo PATH[0m
	[96m$ ls[0m

おそらく[96mls[0mが実行できなくなっていると思います．
変数[96mPATH[0mはコマンドで実行されるプログラムの
場所を保持している変数です．
変数[96mPATH[0mを初期化するとこの例のように一部のコマンドが
使えなくなってしまいます．

[92m‣ xargsと変数[0m
今回使用しているシェルそのもののコマンド名は[96mbash[0mといいます．
[96mbash -c[0mを使うとコマンドを実行することができます．
また，[96m;[0mを使うと複数のコマンドを1行で順に実行できます．
使用例 : [96mbash -c[0mを使って[96mls[0m，[96mpwd[0m，[96mls[0mを順に実行

	[96m$ bash -c "ls; pwd; ls"[0m

このことを使うと，xargsからbashの変数へ値を渡してコマンドを実行することができます．
使用例 : flacファイルをmp3ファイルに変換

	[96m$ ls *.flac | xargs -t -n1 -I{} bash -c 'VAR={}; ffmpeg -i VAR ${VAR/.flac/.mp3}'[0m

補足 : 上の例は込み入っているので詳しく説明します．
まず，パイプの左側で[96m.flac[0mで終わるファイルを全て出力しています．
パイプの右側では，その出力のうち1つだけを[96m{}[0mに代入し
[96mbash[0mのコマンドへ渡しています．
そして，xargsの[96m{}[0mがbashの変数[96mVAR[0mに代入され，処理が行われます．

[35m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
	[35m実践演習[0m
[35m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
1. 変数[96mHENSUU[0mを作り，値を入れて出力してみましょう．

2. まず，[96mtouch file{0..100}.md[0mを実行してください．
   生成されたファイル群の拡張子[96mmd[0mを[96mtxt[0mに変換してみましょう．
