[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
	[33mパイプ その2[0m
[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
[92m‣ xargs[0m
入力を複数個に分割して処理するときに使うコマンドです．
複数のファイルを一括操作出来るのでとても便利です．
[96m commands | xargs command [0mという形式で使用します．
最後の[96m command [0mを省略すると[96m echo [0mという入力を単純に
出力するだけのコマンドが実行されます．
使用例 : [96m ls [0mの結果を[96m xargs [0mを通して表示

	[96m $ ls | xargs [0m

[92m‣ xargs -t[0m
どのように分割されて実行されたかを出力することができます．
使用例 : [96m ls [0mの結果を[96m xargs [0mを通して表示 (ログ付き)

	[96m $ ls | xargs -t [0m

[92m‣ xargs -n2[0m
[96m -n2 [0mと指定すると入力を2つずつ処理できます．
[96m -n1 [0mと指定すれば1つずつ処理できます．
動作は次の例で確かめられます．
使用例 : [96m ls [0mの結果を2つずつ出力 (ログ付き)

	[96m $ ls | xargs -t -n2 [0m

[92m‣ ワイルドカード[0m
[96m * [0mを[96m ワイルドカード [0mといいます．全ての文字列を[96m * [0mで表すことが出来ます．
[96m *.png [0mとすれば，ファイル名が[96m .png [0mで終わる全てのファイルがヒットします．
使用例1 : ディレクトリ内の全ての[96m png [0mファイルを一覧表示

	[96m $ ls *.png [0m

[92m‣ xargs -I{}[0m
[96m -I{} [0mを指定すると，入力を入れる場所を[96m {} [0mで指定出来るようになる．

使用例 : ディレクトリ内にある[96m .txt [0mファイルを[96m .txt.old [0mファイルに変更 (ログ付き)
(つまり，[96m 2019-05.txt [0mは[96m 2019-05.txt.old [0mに名前が変更される)

	[96m $ ls *.memo | xargs -t -n1 -I{} mv {} {}.old

[35m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
	[35m実践演習[0m
[35m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m

1. 1つ上のディレクトリへ行き，全ての演習ファイルを1コマンドで表示しましょう．
   ヒント : 表示には[96m cat [0mと[96m xargs [0mを使います．

2. 新しいディレクトリを作り，全ての演習ファイルをそこに1コマンドでコピーしましょう．


